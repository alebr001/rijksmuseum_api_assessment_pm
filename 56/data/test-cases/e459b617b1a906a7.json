{"uid":"e459b617b1a906a7","name":"Status code 200 verification Collection Details","fullName":"Regression_Testing/scenario_based/collection_details#Status code 200 verification Collection Details","historyId":"b98698ff79eda64b94c99ee7bff2654a:4452d32a67c4b3188f743acc7f916129","time":{"start":1736692460925,"stop":1736692461229,"duration":304},"description":"The test on this request asserts that the reponse has a \"200 OK\" status.\n\nYou can check for any HTTP status code using the same mechanism, for example `pm.response.to.have.status(403)` if your API should return an \"Unauthorized\" response.","descriptionHtml":"The test on this request asserts that the reponse has a \"200 OK\" status.<br><br>You can check for any HTTP status code using the same mechanism, for example `pm.response.to.have.status(403)` if your API should return an \"Unauthorized\" response.","status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"description":"The test on this request asserts that the reponse has a \"200 OK\" status.\n\nYou can check for any HTTP status code using the same mechanism, for example `pm.response.to.have.status(403)` if your API should return an \"Unauthorized\" response.","descriptionHtml":"The test on this request asserts that the reponse has a \"200 OK\" status.<br><br>You can check for any HTTP status code using the same mechanism, for example `pm.response.to.have.status(403)` if your API should return an \"Unauthorized\" response.","status":"passed","steps":[{"name":"Status code is 200","time":{"start":1736692461226,"stop":1736692461226,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[{"uid":"5eced4f0e24768a7","name":"Request Headers","source":"5eced4f0e24768a7.json","type":"application/json","size":270},{"uid":"e4ef171b68baffb8","name":"Response Headers","source":"e4ef171b68baffb8.json","type":"application/json","size":513},{"uid":"b70109bd4da3b99c","name":"Response Body","source":"b70109bd4da3b99c.txt","type":"text/plain","size":6823}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":3,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"fv-az1308-741"},{"name":"thread","value":"pid-1855-worker-main"},{"name":"parentSuite","value":"Regression_Testing"},{"name":"suite","value":"scenario_based"},{"name":"subSuite","value":"collection_details"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"GET - https://www.rijksmuseum.nl/api/NL/collection/SK-A-2815?key=0fiuZFh4&p=0&ps=1"},{"name":"Response Code","value":"200"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":2,"unknown":0,"total":2},"items":[{"uid":"63bedc271a506adc","reportUrl":"https://alebr001.github.io/rijksmuseum_api_assessment_pm/56//#testresult/63bedc271a506adc","status":"passed","time":{"start":1736692152544,"stop":1736692152857,"duration":313}}]},"tags":[]},"source":"e459b617b1a906a7.json","parameterValues":["GET - https://www.rijksmuseum.nl/api/NL/collection/SK-A-2815?key=0fiuZFh4&p=0&ps=1","200"]}