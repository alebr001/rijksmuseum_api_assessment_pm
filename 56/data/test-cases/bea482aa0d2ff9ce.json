{"uid":"bea482aa0d2ff9ce","name":"Status Code 500 Invalid Header Value verification Collection","fullName":"Regression_Testing/scenario_based/collection#Status Code 500 Invalid Header Value verification Collection","historyId":"2415dc3d94e5fed09f0b08884fc6c56f:b93eaa3bb2291c4dc0d519b6dfa47df7","time":{"start":1736692460535,"stop":1736692460647,"duration":112},"description":"The test on this request asserts that the reponse has a \"200 OK\" status.\n\nYou can check for any HTTP status code using the same mechanism, for example `pm.response.to.have.status(403)` if your API should return an \"Unauthorized\" response.","descriptionHtml":"The test on this request asserts that the reponse has a \"200 OK\" status.<br><br>You can check for any HTTP status code using the same mechanism, for example `pm.response.to.have.status(403)` if your API should return an \"Unauthorized\" response.","status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"description":"The test on this request asserts that the reponse has a \"200 OK\" status.\n\nYou can check for any HTTP status code using the same mechanism, for example `pm.response.to.have.status(403)` if your API should return an \"Unauthorized\" response.","descriptionHtml":"The test on this request asserts that the reponse has a \"200 OK\" status.<br><br>You can check for any HTTP status code using the same mechanism, for example `pm.response.to.have.status(403)` if your API should return an \"Unauthorized\" response.","status":"passed","steps":[{"name":"Status code is 500","time":{"start":1736692460645,"stop":1736692460645,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[{"uid":"780eaa76508c6b3a","name":"Request Headers","source":"780eaa76508c6b3a.json","type":"application/json","size":270},{"uid":"55dda839d89b06a1","name":"Response Headers","source":"55dda839d89b06a1.json","type":"application/json","size":258}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"fv-az1308-741"},{"name":"thread","value":"pid-1855-worker-main"},{"name":"parentSuite","value":"Regression_Testing"},{"name":"suite","value":"scenario_based"},{"name":"subSuite","value":"collection"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"GET - https://www.rijksmuseum.nl/api/NL/collection?key=0fiuZFh4&p=0&ps=1&format="},{"name":"Response Code","value":"500"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":2,"unknown":0,"total":2},"items":[{"uid":"ea9fa0d5d76b4aa6","reportUrl":"https://alebr001.github.io/rijksmuseum_api_assessment_pm/56//#testresult/ea9fa0d5d76b4aa6","status":"passed","time":{"start":1736692152124,"stop":1736692152247,"duration":123}}]},"tags":[]},"source":"bea482aa0d2ff9ce.json","parameterValues":["GET - https://www.rijksmuseum.nl/api/NL/collection?key=0fiuZFh4&p=0&ps=1&format=","500"]}