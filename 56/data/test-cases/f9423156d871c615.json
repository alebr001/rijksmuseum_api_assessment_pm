{"uid":"f9423156d871c615","name":"Status Code 500 Invalid Header Value verification Collection Details","fullName":"Regression_Testing/scenario_based/collection_details#Status Code 500 Invalid Header Value verification Collection Details","historyId":"35bfddcc4893a1750b471eb940ff4228:fa858c4d0ffa7560afbe51db03973664","time":{"start":1736692461462,"stop":1736692461569,"duration":107},"description":"The test on this request asserts that the reponse has a \"200 OK\" status.\n\nYou can check for any HTTP status code using the same mechanism, for example `pm.response.to.have.status(403)` if your API should return an \"Unauthorized\" response.","descriptionHtml":"The test on this request asserts that the reponse has a \"200 OK\" status.<br><br>You can check for any HTTP status code using the same mechanism, for example `pm.response.to.have.status(403)` if your API should return an \"Unauthorized\" response.","status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"description":"The test on this request asserts that the reponse has a \"200 OK\" status.\n\nYou can check for any HTTP status code using the same mechanism, for example `pm.response.to.have.status(403)` if your API should return an \"Unauthorized\" response.","descriptionHtml":"The test on this request asserts that the reponse has a \"200 OK\" status.<br><br>You can check for any HTTP status code using the same mechanism, for example `pm.response.to.have.status(403)` if your API should return an \"Unauthorized\" response.","status":"passed","steps":[{"name":"Status code is 500","time":{"start":1736692461567,"stop":1736692461567,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[{"uid":"fdf5e626b474a32b","name":"Request Headers","source":"fdf5e626b474a32b.json","type":"application/json","size":270},{"uid":"e3d2da0e6f94da46","name":"Response Headers","source":"e3d2da0e6f94da46.json","type":"application/json","size":258}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"fv-az1308-741"},{"name":"thread","value":"pid-1855-worker-main"},{"name":"parentSuite","value":"Regression_Testing"},{"name":"suite","value":"scenario_based"},{"name":"subSuite","value":"collection_details"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"GET - https://www.rijksmuseum.nl/api/NL/collection/SK-A-2815?key=0fiuZFh4&p=0&ps=1&format="},{"name":"Response Code","value":"500"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":2,"unknown":0,"total":2},"items":[{"uid":"9d8a93262063c76a","reportUrl":"https://alebr001.github.io/rijksmuseum_api_assessment_pm/56//#testresult/9d8a93262063c76a","status":"passed","time":{"start":1736692153118,"stop":1736692153237,"duration":119}}]},"tags":[]},"source":"f9423156d871c615.json","parameterValues":["GET - https://www.rijksmuseum.nl/api/NL/collection/SK-A-2815?key=0fiuZFh4&p=0&ps=1&format=","500"]}