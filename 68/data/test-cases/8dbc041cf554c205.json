{"uid":"8dbc041cf554c205","name":"Status Code 200 verification Collection","fullName":"Regression_Testing/scenario_based/collection#Status Code 200 verification Collection","historyId":"da2603c029d36b3abb6448d0f7c84ca2:e73dd70d5f5977cd852d33a62104475f","time":{"start":1736771152565,"stop":1736771153456,"duration":891},"description":"The test on this request asserts that the reponse has a \"200 OK\" status.\n\nYou can check for any HTTP status code using the same mechanism, for example `pm.response.to.have.status(403)` if your API should return an \"Unauthorized\" response.","descriptionHtml":"The test on this request asserts that the reponse has a \"200 OK\" status.<br><br>You can check for any HTTP status code using the same mechanism, for example `pm.response.to.have.status(403)` if your API should return an \"Unauthorized\" response.","status":"failed","statusMessage":"Status code is 200","statusTrace":"Response code: 500, status: Internal Server Error","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"description":"The test on this request asserts that the reponse has a \"200 OK\" status.\n\nYou can check for any HTTP status code using the same mechanism, for example `pm.response.to.have.status(403)` if your API should return an \"Unauthorized\" response.","descriptionHtml":"The test on this request asserts that the reponse has a \"200 OK\" status.<br><br>You can check for any HTTP status code using the same mechanism, for example `pm.response.to.have.status(403)` if your API should return an \"Unauthorized\" response.","status":"failed","statusMessage":"Status code is 200","statusTrace":"Response code: 500, status: Internal Server Error","steps":[{"name":"Status code is 200","time":{"start":1736771153449,"stop":1736771153449,"duration":0},"status":"failed","statusMessage":"expected response to have status code 200 but got 500","statusTrace":"AssertionError: expected response to have status code 200 but got 500\n   at Object.eval sandbox-script.js:1:1)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"d0ba76972d3cded0","name":"Request Headers","source":"d0ba76972d3cded0.json","type":"application/json","size":270},{"uid":"d740a1be8c684801","name":"Response Headers","source":"d740a1be8c684801.json","type":"application/json","size":258}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"fv-az1945-159"},{"name":"thread","value":"pid-1845-worker-main"},{"name":"parentSuite","value":"Regression_Testing"},{"name":"suite","value":"scenario_based"},{"name":"subSuite","value":"collection"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"GET - https://www.rijksmuseum.nl/api/NL/collection?key=0fiuZFh4&p=0&ps=1"},{"name":"Response Code","value":"500"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":8,"broken":0,"skipped":0,"passed":2,"unknown":0,"total":10},"items":[{"uid":"33cbf68633ab5427","reportUrl":"https://alebr001.github.io/rijksmuseum_api_assessment_pm/67//#testresult/33cbf68633ab5427","status":"failed","statusDetails":"Status code is 200","time":{"start":1736760287944,"stop":1736760288865,"duration":921}},{"uid":"52cefa8541fbd09f","reportUrl":"https://alebr001.github.io/rijksmuseum_api_assessment_pm/66//#testresult/52cefa8541fbd09f","status":"failed","statusDetails":"Status code is 200","time":{"start":1736759384117,"stop":1736759384726,"duration":609}},{"uid":"ec4d60123e7ab079","reportUrl":"https://alebr001.github.io/rijksmuseum_api_assessment_pm/65//#testresult/ec4d60123e7ab079","status":"failed","statusDetails":"Status code is 200","time":{"start":1736758069238,"stop":1736758069974,"duration":736}},{"uid":"f6c879fb912e71e9","reportUrl":"https://alebr001.github.io/rijksmuseum_api_assessment_pm/64//#testresult/f6c879fb912e71e9","status":"failed","statusDetails":"Status code is 200","time":{"start":1736757848251,"stop":1736757848983,"duration":732}},{"uid":"7eca2eaf46872626","reportUrl":"https://alebr001.github.io/rijksmuseum_api_assessment_pm/63//#testresult/7eca2eaf46872626","status":"failed","statusDetails":"Status code is 200","time":{"start":1736754755582,"stop":1736754756283,"duration":701}},{"uid":"5c2186bed5d0fd6","reportUrl":"https://alebr001.github.io/rijksmuseum_api_assessment_pm/62//#testresult/5c2186bed5d0fd6","status":"passed","time":{"start":1736704879541,"stop":1736704881576,"duration":2035}},{"uid":"23573a73a51d36a5","reportUrl":"https://alebr001.github.io/rijksmuseum_api_assessment_pm/61//#testresult/23573a73a51d36a5","status":"passed","time":{"start":1736704477610,"stop":1736704479496,"duration":1886}},{"uid":"f926b1b3e948d2b","reportUrl":"https://alebr001.github.io/rijksmuseum_api_assessment_pm/60//#testresult/f926b1b3e948d2b","status":"failed","statusDetails":"Status code is 200","time":{"start":1736694423068,"stop":1736694424142,"duration":1074}},{"uid":"9e18caa70cf59766","reportUrl":"https://alebr001.github.io/rijksmuseum_api_assessment_pm/59//#testresult/9e18caa70cf59766","status":"failed","statusDetails":"Status code is 200","time":{"start":1736693195063,"stop":1736693195772,"duration":709}}]},"tags":[]},"source":"8dbc041cf554c205.json","parameterValues":["GET - https://www.rijksmuseum.nl/api/NL/collection?key=0fiuZFh4&p=0&ps=1","500"]}