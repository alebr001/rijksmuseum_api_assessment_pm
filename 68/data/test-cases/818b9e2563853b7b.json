{"uid":"818b9e2563853b7b","name":"Status Code 401 Invalid Key verification Collection","fullName":"Regression_Testing/scenario_based/collection#Status Code 401 Invalid Key verification Collection","historyId":"de538b2f02a8029f49325d05ffcd5052:01d13a4ea924e0d5cab704a491bd41d0","time":{"start":1736771153459,"stop":1736771153626,"duration":167},"description":"The test on this request asserts that the reponse has a \"200 OK\" status.\n\nYou can check for any HTTP status code using the same mechanism, for example `pm.response.to.have.status(403)` if your API should return an \"Unauthorized\" response.","descriptionHtml":"The test on this request asserts that the reponse has a \"200 OK\" status.<br><br>You can check for any HTTP status code using the same mechanism, for example `pm.response.to.have.status(403)` if your API should return an \"Unauthorized\" response.","status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"description":"The test on this request asserts that the reponse has a \"200 OK\" status.\n\nYou can check for any HTTP status code using the same mechanism, for example `pm.response.to.have.status(403)` if your API should return an \"Unauthorized\" response.","descriptionHtml":"The test on this request asserts that the reponse has a \"200 OK\" status.<br><br>You can check for any HTTP status code using the same mechanism, for example `pm.response.to.have.status(403)` if your API should return an \"Unauthorized\" response.","status":"passed","steps":[{"name":"Status code is 401","time":{"start":1736771153623,"stop":1736771153624,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Body contains 'Invalid key'","time":{"start":1736771153624,"stop":1736771153624,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[{"uid":"5e129ab2898b6c77","name":"Request Headers","source":"5e129ab2898b6c77.json","type":"application/json","size":270},{"uid":"4e042bcd6147db8c","name":"Response Headers","source":"4e042bcd6147db8c.json","type":"application/json","size":444},{"uid":"362812b4ba2b0fa","name":"Response Body","source":"362812b4ba2b0fa.txt","type":"text/plain","size":11}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":2,"attachmentsCount":3,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"fv-az1945-159"},{"name":"thread","value":"pid-1845-worker-main"},{"name":"parentSuite","value":"Regression_Testing"},{"name":"suite","value":"scenario_based"},{"name":"subSuite","value":"collection"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"GET - https://www.rijksmuseum.nl/api/NL/collection?p=0&ps=1&key=%22wrongKey%22"},{"name":"Response Code","value":"401"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":10,"unknown":0,"total":10},"items":[{"uid":"6bc51cfe375f6010","reportUrl":"https://alebr001.github.io/rijksmuseum_api_assessment_pm/67//#testresult/6bc51cfe375f6010","status":"passed","time":{"start":1736760288869,"stop":1736760289060,"duration":191}},{"uid":"ceba030e82510959","reportUrl":"https://alebr001.github.io/rijksmuseum_api_assessment_pm/66//#testresult/ceba030e82510959","status":"passed","time":{"start":1736759384732,"stop":1736759384856,"duration":124}},{"uid":"575cea3bd7e772c1","reportUrl":"https://alebr001.github.io/rijksmuseum_api_assessment_pm/65//#testresult/575cea3bd7e772c1","status":"passed","time":{"start":1736758069980,"stop":1736758070113,"duration":133}},{"uid":"25a83a3384845c6f","reportUrl":"https://alebr001.github.io/rijksmuseum_api_assessment_pm/64//#testresult/25a83a3384845c6f","status":"passed","time":{"start":1736757848986,"stop":1736757849212,"duration":226}},{"uid":"5857166ab4487464","reportUrl":"https://alebr001.github.io/rijksmuseum_api_assessment_pm/63//#testresult/5857166ab4487464","status":"passed","time":{"start":1736754756286,"stop":1736754756430,"duration":144}},{"uid":"53c328aa37afe3af","reportUrl":"https://alebr001.github.io/rijksmuseum_api_assessment_pm/62//#testresult/53c328aa37afe3af","status":"passed","time":{"start":1736704881579,"stop":1736704881747,"duration":168}},{"uid":"65fecde10d38ccc6","reportUrl":"https://alebr001.github.io/rijksmuseum_api_assessment_pm/61//#testresult/65fecde10d38ccc6","status":"passed","time":{"start":1736704479499,"stop":1736704479677,"duration":178}},{"uid":"7e83d9ccd313b7d9","reportUrl":"https://alebr001.github.io/rijksmuseum_api_assessment_pm/60//#testresult/7e83d9ccd313b7d9","status":"passed","time":{"start":1736694424146,"stop":1736694424341,"duration":195}},{"uid":"31c70ceda856dbc7","reportUrl":"https://alebr001.github.io/rijksmuseum_api_assessment_pm/59//#testresult/31c70ceda856dbc7","status":"passed","time":{"start":1736693195778,"stop":1736693195917,"duration":139}}]},"tags":[]},"source":"818b9e2563853b7b.json","parameterValues":["GET - https://www.rijksmuseum.nl/api/NL/collection?p=0&ps=1&key=%22wrongKey%22","401"]}