{"uid":"d5b3a777e5a4f575","name":"Status code 401 Invalid Key verification Collection Details","fullName":"Regression_Testing/scenario_based/collection_details#Status code 401 Invalid Key verification Collection Details","historyId":"aa7fc3ef0fc2b6206b99149b43ceb9d5:1cd3f9d51bfde6606b36b7d0c22e580b","time":{"start":1736687506569,"stop":1736687506694,"duration":125},"description":"The test on this request asserts that the reponse has a \"200 OK\" status.\n\nYou can check for any HTTP status code using the same mechanism, for example `pm.response.to.have.status(403)` if your API should return an \"Unauthorized\" response.","descriptionHtml":"The test on this request asserts that the reponse has a \"200 OK\" status.<br><br>You can check for any HTTP status code using the same mechanism, for example `pm.response.to.have.status(403)` if your API should return an \"Unauthorized\" response.","status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"description":"The test on this request asserts that the reponse has a \"200 OK\" status.\n\nYou can check for any HTTP status code using the same mechanism, for example `pm.response.to.have.status(403)` if your API should return an \"Unauthorized\" response.","descriptionHtml":"The test on this request asserts that the reponse has a \"200 OK\" status.<br><br>You can check for any HTTP status code using the same mechanism, for example `pm.response.to.have.status(403)` if your API should return an \"Unauthorized\" response.","status":"passed","steps":[{"name":"Status code is 401","time":{"start":1736687506692,"stop":1736687506692,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Body contains 'Invalid key'","time":{"start":1736687506692,"stop":1736687506693,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[{"uid":"bc2b85f72f026345","name":"Request Headers","source":"bc2b85f72f026345.json","type":"application/json","size":270},{"uid":"afa0ce415fbf5685","name":"Response Headers","source":"afa0ce415fbf5685.json","type":"application/json","size":444},{"uid":"dbb45cc4e6fda28f","name":"Response Body","source":"dbb45cc4e6fda28f.txt","type":"text/plain","size":11}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":2,"attachmentsCount":3,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"fv-az1276-936"},{"name":"thread","value":"pid-1857-worker-main"},{"name":"parentSuite","value":"Regression_Testing"},{"name":"suite","value":"scenario_based"},{"name":"subSuite","value":"collection_details"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"GET - https://www.rijksmuseum.nl/api/NL/collection/SK-A-2815?p=0&ps=1&key=%22wrongKey%22"},{"name":"Response Code","value":"401"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"tags":[]},"source":"d5b3a777e5a4f575.json","parameterValues":["GET - https://www.rijksmuseum.nl/api/NL/collection/SK-A-2815?p=0&ps=1&key=%22wrongKey%22","401"]}