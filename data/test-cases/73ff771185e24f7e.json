{"uid":"73ff771185e24f7e","name":"Status Code 500 Invalid Header Value verification Collection","fullName":"Regression_Testing/scenario_based/collection#Status Code 500 Invalid Header Value verification Collection","historyId":"2415dc3d94e5fed09f0b08884fc6c56f:b93eaa3bb2291c4dc0d519b6dfa47df7","time":{"start":1736688646447,"stop":1736688646569,"duration":122},"description":"The test on this request asserts that the reponse has a \"200 OK\" status.\n\nYou can check for any HTTP status code using the same mechanism, for example `pm.response.to.have.status(403)` if your API should return an \"Unauthorized\" response.","descriptionHtml":"The test on this request asserts that the reponse has a \"200 OK\" status.<br><br>You can check for any HTTP status code using the same mechanism, for example `pm.response.to.have.status(403)` if your API should return an \"Unauthorized\" response.","status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"testStage":{"description":"The test on this request asserts that the reponse has a \"200 OK\" status.\n\nYou can check for any HTTP status code using the same mechanism, for example `pm.response.to.have.status(403)` if your API should return an \"Unauthorized\" response.","descriptionHtml":"The test on this request asserts that the reponse has a \"200 OK\" status.<br><br>You can check for any HTTP status code using the same mechanism, for example `pm.response.to.have.status(403)` if your API should return an \"Unauthorized\" response.","status":"passed","steps":[{"name":"Status code is 500","time":{"start":1736688646567,"stop":1736688646567,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[{"uid":"6db960c94e4ec2c8","name":"Request Headers","source":"6db960c94e4ec2c8.json","type":"application/json","size":270},{"uid":"b36ec1fd3cf72ad4","name":"Response Headers","source":"b36ec1fd3cf72ad4.json","type":"application/json","size":258}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"fv-az1280-43"},{"name":"thread","value":"pid-1861-worker-main"},{"name":"parentSuite","value":"Regression_Testing"},{"name":"suite","value":"scenario_based"},{"name":"subSuite","value":"collection"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"GET - https://www.rijksmuseum.nl/api/NL/collection?key=0fiuZFh4&p=0&ps=1&format="},{"name":"Response Code","value":"500"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"4e4110405f59b963","status":"passed","time":{"start":1736687505794,"stop":1736687505918,"duration":124}}],"categories":[],"tags":[]},"source":"73ff771185e24f7e.json","parameterValues":["GET - https://www.rijksmuseum.nl/api/NL/collection?key=0fiuZFh4&p=0&ps=1&format=","500"]}