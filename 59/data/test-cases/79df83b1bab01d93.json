{"uid":"79df83b1bab01d93","name":"Status Code 500 Invalid Header Value verification Collection","fullName":"Regression_Testing/scenario_based/collection#Status Code 500 Invalid Header Value verification Collection","historyId":"2415dc3d94e5fed09f0b08884fc6c56f:b93eaa3bb2291c4dc0d519b6dfa47df7","time":{"start":1736693196049,"stop":1736693196187,"duration":138},"description":"The test on this request asserts that the reponse has a \"200 OK\" status.\n\nYou can check for any HTTP status code using the same mechanism, for example `pm.response.to.have.status(403)` if your API should return an \"Unauthorized\" response.","descriptionHtml":"The test on this request asserts that the reponse has a \"200 OK\" status.<br><br>You can check for any HTTP status code using the same mechanism, for example `pm.response.to.have.status(403)` if your API should return an \"Unauthorized\" response.","status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"description":"The test on this request asserts that the reponse has a \"200 OK\" status.\n\nYou can check for any HTTP status code using the same mechanism, for example `pm.response.to.have.status(403)` if your API should return an \"Unauthorized\" response.","descriptionHtml":"The test on this request asserts that the reponse has a \"200 OK\" status.<br><br>You can check for any HTTP status code using the same mechanism, for example `pm.response.to.have.status(403)` if your API should return an \"Unauthorized\" response.","status":"passed","steps":[{"name":"Status code is 500","time":{"start":1736693196185,"stop":1736693196185,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[{"uid":"b6f1841a845fb23","name":"Request Headers","source":"b6f1841a845fb23.json","type":"application/json","size":270},{"uid":"866b08ae51cbab87","name":"Response Headers","source":"866b08ae51cbab87.json","type":"application/json","size":258}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"fv-az1692-228"},{"name":"thread","value":"pid-1857-worker-main"},{"name":"parentSuite","value":"Regression_Testing"},{"name":"suite","value":"scenario_based"},{"name":"subSuite","value":"collection"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"GET - https://www.rijksmuseum.nl/api/NL/collection?key=0fiuZFh4&p=0&ps=1&format="},{"name":"Response Code","value":"500"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"tags":[]},"source":"79df83b1bab01d93.json","parameterValues":["GET - https://www.rijksmuseum.nl/api/NL/collection?key=0fiuZFh4&p=0&ps=1&format=","500"]}