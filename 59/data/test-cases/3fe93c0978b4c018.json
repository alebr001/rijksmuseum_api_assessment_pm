{"uid":"3fe93c0978b4c018","name":"Status code 200 verification Collection Details","fullName":"Regression_Testing/scenario_based/collection_details#Status code 200 verification Collection Details","historyId":"b98698ff79eda64b94c99ee7bff2654a:4452d32a67c4b3188f743acc7f916129","time":{"start":1736693196504,"stop":1736693196862,"duration":358},"description":"The test on this request asserts that the reponse has a \"200 OK\" status.\n\nYou can check for any HTTP status code using the same mechanism, for example `pm.response.to.have.status(403)` if your API should return an \"Unauthorized\" response.","descriptionHtml":"The test on this request asserts that the reponse has a \"200 OK\" status.<br><br>You can check for any HTTP status code using the same mechanism, for example `pm.response.to.have.status(403)` if your API should return an \"Unauthorized\" response.","status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"description":"The test on this request asserts that the reponse has a \"200 OK\" status.\n\nYou can check for any HTTP status code using the same mechanism, for example `pm.response.to.have.status(403)` if your API should return an \"Unauthorized\" response.","descriptionHtml":"The test on this request asserts that the reponse has a \"200 OK\" status.<br><br>You can check for any HTTP status code using the same mechanism, for example `pm.response.to.have.status(403)` if your API should return an \"Unauthorized\" response.","status":"passed","steps":[{"name":"Status code is 200","time":{"start":1736693196860,"stop":1736693196861,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[{"uid":"7e76cdb93889d571","name":"Request Headers","source":"7e76cdb93889d571.json","type":"application/json","size":270},{"uid":"4fa3d2af96f6c36e","name":"Response Headers","source":"4fa3d2af96f6c36e.json","type":"application/json","size":513},{"uid":"b05df8c90400d19f","name":"Response Body","source":"b05df8c90400d19f.txt","type":"text/plain","size":6823}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":3,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"fv-az1692-228"},{"name":"thread","value":"pid-1857-worker-main"},{"name":"parentSuite","value":"Regression_Testing"},{"name":"suite","value":"scenario_based"},{"name":"subSuite","value":"collection_details"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"GET - https://www.rijksmuseum.nl/api/NL/collection/SK-A-2815?key=0fiuZFh4&p=0&ps=1"},{"name":"Response Code","value":"200"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"tags":[]},"source":"3fe93c0978b4c018.json","parameterValues":["GET - https://www.rijksmuseum.nl/api/NL/collection/SK-A-2815?key=0fiuZFh4&p=0&ps=1","200"]}